/' * Copyright 1990 Ithaca Software, Alameda, CA * '/
' NOTAS IMPORTANTES:
' TODOS los comandos importantes del HOOPS comienzan con HC_
' los que tienen seguido una Q antes del nombre de la funcion, son identicos a su gemelo sin "Q", pero 
' que permite elegir el segmento sobre el que actua, en lugar del actual. (sería el primer parametro como ZSTRING)
' 
' los que llevan una K es por que devuelve (o sea, son funciones) una clave HC_KEY (integer, ver los defines abajo)
' los hay mezclados con QK o sea, selecionar un segmento por su nombre y recuperar una clave INT

#Ifndef BOOL
	#Define BOOL Byte
#EndIf

'#Ifndef TRUE
'	#Define TRUE 1
'	#Define FALSE 0
'#EndIf

#Define HC_INTEGER Integer
#Define HC_SINGLE  Single
#Define HC_DOUBLE  Double
#Define HC_STRING  ZString Ptr

#Define HC_BOOLEAN Byte
#Define HC_KEY		 HC_INTEGER
#Define HC_PIXEL	 HC_INTEGER

Type HC_POINT
	As HC_SINGLE x, y, z
End Type

Type HC_PLANE
	As HC_POINT p1, p2, p3
End Type


 ' version mas moderna de todas, la 17.00
 ' estas no estaban en la 4.0, pero si en posteriores, las incluyo yo a mano
 Declare Sub HC_Set_Rendering_Options Cdecl Alias "HC_Set_Rendering_Options"( sa As HC_STRING)
 Declare Sub HC_Read_Metafile Cdecl Alias "HC_Read_Metafile"( sa As HC_STRING, sb As HC_STRING, sc As HC_STRING) 
 Declare Sub HC_Write_Metafile Cdecl Alias "HC_Write_Metafile"( sa As HC_STRING, sb As HC_STRING, sc As HC_STRING) 
 Declare Sub HC_Insert_Spot_Light Cdecl Alias "HC_Insert_Spot_Light"( hc1 As HC_POINT Ptr, hc2 As HC_POINT Ptr, sa As HC_STRING) 
 Declare Sub HC_Insert_Text_With_Encoding Cdecl Alias "HC_Insert_Text_With_Encoding"(da As HC_DOUBLE, db As HC_DOUBLE, dc As HC_DOUBLE, sa As HC_STRING, sb As HC_STRING) 
 Declare Sub HC_Insert_Grid  Cdecl Alias "HC_Insert_Grid"(sa As HC_STRING, hc As HC_POINT Ptr, hc As HC_POINT Ptr, hc As HC_POINT Ptr ,rc as HC_INTEGER, rc as HC_INTEGER) 
 Declare Sub HC_Insert_Mesh  Cdecl Alias "HC_Insert_Mesh"(rc as HC_INTEGER, rc as HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Shell Cdecl Alias "HC_Insert_Shell"(rc as HC_INTEGER, hc As HC_POINT Ptr, rc as HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Image Cdecl Alias "HC_Insert_Image"(fa As HC_DOUBLE, fa As HC_DOUBLE, fa As HC_DOUBLE, sa As HC_STRING ,rc1 as HC_INTEGER, rc2 as HC_INTEGER, datos As HC_INTEGER Ptr) 
 Declare Sub HC_Flush_Contents Cdecl Alias "HC_Flush_Contents"(sb As HC_STRING, sc As HC_STRING) 
 Declare Sub HC_Compute_Text_Outline Cdecl Alias "HC_Compute_Text_Outline"(segment As HC_STRING , text As HC_STRING ,  pcount As HC_INTEGER Ptr ,  points As HC_POINT Ptr ,  flist_length As HC_INTEGER Ptr ,  face_list As HC_INTEGER Ptr) 
 Declare Sub HC_Compute_Text_Outline_Size Cdecl Alias "HC_Compute_Text_Outline_Size"(segment As HC_STRING , text As HC_STRING ,  pcount As HC_INTEGER Ptr ,  flist_length As HC_INTEGER Ptr) 
 Declare Sub HC_Move_Light_Target Cdecl Alias "HC_Move_Light_Target"(key As HC_KEY , x As HC_DOUBLE , y As HC_DOUBLE , z As HC_DOUBLE) 
 Declare Sub HC_Insert_Cylinder Cdecl Alias "HC_Insert_Cylinder"(hc As HC_POINT Ptr, hc As HC_POINT Ptr, dd As  HC_DOUBLE, sa As HC_STRING)
 Declare Sub HC_Flush_Geometry Cdecl Alias "HC_Flush_Geometry"(segment As HC_STRING) 

 Declare Sub HC_Open_Vertex Cdecl Alias "HC_Open_Vertex"(aa As HC_INTEGER) 
 Declare Sub HC_Close_Vertex Cdecl Alias "HC_Close_Vertex"() 
 
 Declare Sub HC_Open_Geometry Cdecl Alias "HC_Open_Geometry"(aa As HC_KEY) 
 Declare Sub HC_Close_Geometry Cdecl Alias "HC_Close_Geometry"() 
 
 Declare Sub HC_Open_Face Cdecl Alias "HC_Open_Face"(offset As HC_INTEGER) 
 Declare Sub HC_Close_Face Cdecl Alias "HC_Close_Face"() 

 Declare Sub HC_Set_Color_By_FIndex Cdecl Alias "HC_Set_Color_By_FIndex"(types As HC_STRING , findex As HC_DOUBLE) 
 Declare Sub HC_Insert_Sphere Cdecl Alias "HC_Insert_Sphere"( center As HC_POINT Ptr , radius As HC_DOUBLE ,  axis As HC_POINT Ptr ,  ortho As HC_POINT Ptr) 

 ' -------------
 Declare function HC_KInsert_Mesh Cdecl Alias "HC_KInsert_Mesh"(a As HC_INTEGER, b As HC_INTEGER ,hc1 As HC_POINT Ptr) As HC_INTEGER
 Declare function HC_KInsert_Spot_Light Cdecl Alias "HC_KInsert_Spot_Light"(position As HC_POINT Ptr ,  target As HC_POINT Ptr , list As HC_STRING) As HC_KEY
 Declare Function HC_Compute_Circumsphere Cdecl Alias "HC_Compute_Circumsphere"(segment As HC_STRING ,  center As HC_POINT Ptr ,  radius As HC_SINGLE Ptr) As HC_BOOLEAN
 Declare Function HC_KInsert_Image_By_Ref Cdecl Alias "HC_KInsert_Image_By_Ref"(x As HC_DOUBLE , y As HC_DOUBLE , z As HC_DOUBLE , format_ As HC_STRING , width_ As HC_INTEGER , height_ As HC_INTEGER ,  data_ As HC_PIXEL Ptr) As HC_KEY 


' Superficies y Curvas NURBS
Declare Sub      HC_Insert_NURBS_Curve Cdecl Alias "HC_Insert_NURBS_Curve"(degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) 
Declare Function HC_KInsert_NURBS_Curve Cdecl Alias "HC_KInsert_NURBS_Curve"(degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) As HC_KEY 
Declare Sub      HC_QInsert_NURBS_Curve Cdecl Alias "HC_QInsert_NURBS_Curve"(segment As HC_STRING , degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) 
Declare Function HC_QKInsert_NURBS_Curve Cdecl Alias "HC_QKInsert_NURBS_Curve"(segment As HC_STRING , degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) As HC_KEY 
Declare Sub      HC_DInsert_NURBS_Curve Cdecl Alias "HC_DInsert_NURBS_Curve"(degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) 
Declare Function HC_DKInsert_NURBS_Curve Cdecl Alias "HC_DKInsert_NURBS_Curve"(degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) As HC_KEY 
Declare Sub      HC_DQInsert_NURBS_Curve Cdecl Alias "HC_DQInsert_NURBS_Curve"(segment As HC_STRING , degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) 
Declare Function HC_DQKInsert_NURBS_Curve Cdecl Alias "HC_DQKInsert_NURBS_Curve"(segment As HC_STRING , degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) As HC_KEY 
'
Declare Sub      HC_Insert_NURBS_Surface Cdecl Alias "HC_Insert_NURBS_Surface"(u_degree As HC_INTEGER , v_degree As HC_INTEGER , u_count As HC_INTEGER , v_count As HC_INTEGER ,  points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  u_knots As HC_SINGLE Ptr ,  v_knots As HC_SINGLE Ptr) 
Declare Function HC_KInsert_NURBS_Surface Cdecl Alias "HC_KInsert_NURBS_Surface"(u_degree As HC_INTEGER , v_degree As HC_INTEGER , u_count As HC_INTEGER , v_count As HC_INTEGER ,  points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  u_knots As HC_SINGLE Ptr ,  v_knots As HC_SINGLE Ptr) As HC_KEY 
Declare Sub      HC_QInsert_NURBS_Surface Cdecl Alias "HC_QInsert_NURBS_Surface"(segment As HC_STRING , u_degree As HC_INTEGER , v_degree As HC_INTEGER , u_count As HC_INTEGER , v_count As HC_INTEGER ,  points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  u_knots As HC_SINGLE Ptr ,  v_knots As HC_SINGLE Ptr) 
Declare Function HC_QKInsert_NURBS_Surface Cdecl Alias "HC_QKInsert_NURBS_Surface"(segment As HC_STRING , u_degree As HC_INTEGER , v_degree As HC_INTEGER , u_count As HC_INTEGER , v_count As HC_INTEGER ,  points As HC_POINT Ptr ,  weights As HC_SINGLE Ptr ,  u_knots As HC_SINGLE Ptr ,  v_knots As HC_SINGLE Ptr) As HC_KEY 

' recorte de superficies
Declare Sub HC_Create_Trim_Collection Cdecl Alias "HC_Create_Trim_Collection"() 
Declare Sub HC_Delete_Trim Cdecl Alias "HC_Delete_Trim"(index As HC_INTEGER) 
Declare Sub HC_Open_Trim Cdecl Alias "HC_Open_Trim"(offset As HC_INTEGER) 
Declare Sub HC_Close_Trim Cdecl Alias "HC_Close_Trim"() 
Declare Sub HC_Trim_NURBS_Surface_By_Curve Cdecl Alias "HC_Trim_NURBS_Surface_By_Curve"(degree As HC_INTEGER , cpcount As HC_INTEGER ,  control_points As HC_SINGLE Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr , start_u As HC_DOUBLE , end_u As HC_DOUBLE) 
Declare Sub HC_Trim_NURBS_Surface_By_Poly Cdecl Alias "HC_Trim_NURBS_Surface_By_Poly"(cpcount As HC_INTEGER ,  points As HC_SINGLE Ptr) 
Declare Sub HC_Set_Trim_Operation Cdecl Alias "HC_Set_Trim_Operation"(index As HC_INTEGER , operation As HC_STRING) 
' ???? son SHOW, no SET, ni idea
'Declare Sub HC_Show_Trim_Count Cdecl Alias "HC_Show_Trim_Count"( count As HC_INTEGER Ptr) 
'Declare Sub HC_Show_Trim_Curve Cdecl Alias "HC_Show_Trim_Curve"(index As Integer ,  degree As HC_INTEGER Ptr ,  cp_count As HC_INTEGER Ptr ,  points As HC_SINGLE Ptr ,  weights As HC_SINGLE Ptr ,  knots As HC_SINGLE Ptr ,  start_u As HC_SINGLE Ptr ,  end_u As HC_SINGLE Ptr) 
'Declare Sub HC_Show_Trim_Curve_Count Cdecl Alias "HC_Show_Trim_Curve_Count"(index As Integer ,  degree As HC_INTEGER Ptr ,  cp_count As HC_INTEGER Ptr ,  w_count As HC_INTEGER Ptr ,  knot_count As HC_INTEGER Ptr) 
'Declare Sub HC_Show_Trim_Operation Cdecl Alias "HC_Show_Trim_Operation"(index As Integer , operation As HC_STRING) 
'Declare Sub HC_Show_Trim_Poly Cdecl Alias "HC_Show_Trim_Poly"(index As Integer ,  count As HC_INTEGER Ptr ,  points As HC_SINGLE Ptr) 
'Declare Sub HC_Show_Trim_Poly_Count Cdecl Alias "HC_Show_Trim_Poly_Count"(index As Integer ,  count As HC_INTEGER Ptr) 
'Declare Sub HC_Show_Trim_Type Cdecl Alias "HC_Show_Trim_Type"(index As Integer , trim_type As HC_STRING) 



 ' ------------- localizadas ---------------
 Declare Sub HC_Abort_Program Cdecl Alias "HC_Abort_Program"( sa As HC_STRING) 
 Declare Sub HC_Append_Modelling_Matrix Cdecl Alias "HC_Append_Modelling_Matrix"(matrix As HC_SINGLE ptr) 
 Declare Sub HC_Await_Event Cdecl Alias "HC_Await_Event"( sa As HC_STRING) 
 Declare Sub HC_Bring_To_Front Cdecl Alias "HC_Bring_To_Front"( sa As HC_STRING) 
 Declare Sub HC_Bring_To_Front_By_Key Cdecl Alias "HC_Bring_To_Front_By_Key"(hk as HC_KEY) 
 Declare Sub HC_Clear_Display Cdecl Alias "HC_Clear_Display"() 
 Declare Sub HC_Close_Segment Cdecl Alias "HC_Close_Segment"() 
 Declare Sub HC_Copy_Segment Cdecl Alias "HC_Copy_Segment"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Create_Segment Cdecl Alias "HC_Create_Segment"( sa As HC_STRING) 
 Declare Sub HC_Define_Alias Cdecl Alias "HC_Define_Alias"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Define_Color Cdecl Alias "HC_Define_Color"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Define_Error_Handler Cdecl Alias "HC_Define_Error_Handler"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_Define_Exit_Handler Cdecl Alias "HC_Define_Exit_Handler"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_Delete_By_Key Cdecl Alias "HC_Delete_By_Key"(hk as HC_KEY) 
 Declare Sub HC_Delete_Segment Cdecl Alias "HC_Delete_Segment"( sa As HC_STRING) 
 Declare Sub HC_Disable_Button_Events Cdecl Alias "HC_Disable_Button_Events"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Disable_Location_Events Cdecl Alias "HC_Disable_Location_Events"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Disable_Selection_Events Cdecl Alias "HC_Disable_Selection_Events"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Disable_String_Events Cdecl Alias "HC_Disable_String_Events"( sa As HC_STRING , hk As HC_KEY) 
 Declare Sub HC_Disable_Wakeup_Events Cdecl Alias "HC_Disable_Wakeup_Events"(da As HC_DOUBLE ) 
 Declare Sub HC_Dolly_Camera Cdecl Alias "HC_Dolly_Camera"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Edit_Pixel_Array Cdecl Alias "HC_Edit_Pixel_Array"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) 
 Declare Sub HC_Edit_Polygon Cdecl Alias "HC_Edit_Polygon"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Edit_Polyline Cdecl Alias "HC_Edit_Polyline"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Edit_Text Cdecl Alias "HC_Edit_Text"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_Enable_Button_Events Cdecl Alias "HC_Enable_Button_Events"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Enable_Location_Events Cdecl Alias "HC_Enable_Location_Events"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Enable_Selection_Events Cdecl Alias "HC_Enable_Selection_Events"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Enable_String_Events Cdecl Alias "HC_Enable_String_Events"( sa As HC_STRING , hk As HC_KEY) 
 Declare Sub HC_Enable_Wakeup_Events Cdecl Alias "HC_Enable_Wakeup_Events"(da As HC_DOUBLE ) 
 Declare Sub HC_Exit_Program Cdecl Alias "HC_Exit_Program"() 
 Declare Sub HC_Flush_All_Events Cdecl Alias "HC_Flush_All_Events"() 
 Declare Sub HC_Flush_By_Key Cdecl Alias "HC_Flush_By_Key"(hk as HC_KEY) 
 Declare Sub HC_Flush_Segment Cdecl Alias "HC_Flush_Segment"( sa As HC_STRING) 
 Declare Sub HC_Get_Button Cdecl Alias "HC_Get_Button"( sa As HC_STRING) 
 Declare Sub HC_Get_Location Cdecl Alias "HC_Get_Location"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Get_Selection Cdecl Alias "HC_Get_Selection"( sa As HC_STRING) 
 Declare Sub HC_Get_String Cdecl Alias "HC_Get_String"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Get_Wakeup Cdecl Alias "HC_Get_Wakeup"(da As HC_DOUBLE ) 
 Declare Sub HC_Include_Segment Cdecl Alias "HC_Include_Segment"( sa As HC_STRING) 
 Declare Sub HC_Insert_Distant_Light Cdecl Alias "HC_Insert_Distant_Light"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Insert_Ink Cdecl Alias "HC_Insert_Ink"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Insert_Line Cdecl Alias "HC_Insert_Line"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Insert_Marker Cdecl Alias "HC_Insert_Marker"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Insert_Pixel_Array Cdecl Alias "HC_Insert_Pixel_Array"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) 
 Declare Sub HC_Insert_Pixel_Array_By_Ref Cdecl Alias "HC_Insert_Pixel_Array_By_Ref"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) 
 Declare Sub HC_Insert_Polygon Cdecl Alias "HC_Insert_Polygon"(ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Polyline Cdecl Alias "HC_Insert_Polyline"(ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Text Cdecl Alias "HC_Insert_Text"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE,  sa As HC_STRING) 
 Declare Sub HC_Modify_Color_Map Cdecl Alias "HC_Modify_Color_Map"(ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_Modify_Color_Map_By_Value Cdecl Alias "HC_Modify_Color_Map_By_Value"(ia As HC_INTEGER,  sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Move_By_Key Cdecl Alias "HC_Move_By_Key"(hk as HC_KEY ,  sa As HC_STRING) 
 Declare Sub HC_Move_Distant_Light Cdecl Alias "HC_Move_Distant_Light"(hk as HC_KEY , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Move_Pixel_Array Cdecl Alias "HC_Move_Pixel_Array"(hk as HC_KEY , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Move_Segment Cdecl Alias "HC_Move_Segment"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Move_String_Cursor Cdecl Alias "HC_Move_String_Cursor"(hk as HC_KEY , ia As HC_INTEGER,ia As HC_INTEGER) 
 Declare Sub HC_Open_Segment Cdecl Alias "HC_Open_Segment"( sa As HC_STRING) 
 Declare Sub HC_Open_Segment_By_Key Cdecl Alias "HC_Open_Segment_By_Key"(hk as HC_KEY) 
 Declare Sub HC_Orbit_Camera Cdecl Alias "HC_Orbit_Camera"(da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Pan_Camera Cdecl Alias "HC_Pan_Camera"(da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Pause Cdecl Alias "HC_Pause"() 
 Declare Sub HC_Print_Version Cdecl Alias "HC_Print_Version"() 
 
 Declare Sub HC_QAppend_Modelling_Matrix Cdecl Alias "HC_QAppend_Modelling_Matrix"( sa As HC_STRING , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_QDolly_Camera Cdecl Alias "HC_QDolly_Camera"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QModify_Color_Map Cdecl Alias "HC_QModify_Color_Map"( sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_QModify_Color_Map_By_Value Cdecl Alias "HC_QModify_Color_Map_By_Value"( sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_QOrbit_Camera Cdecl Alias "HC_QOrbit_Camera"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QPan_Camera Cdecl Alias "HC_QPan_Camera"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QRoll_Camera Cdecl Alias "HC_QRoll_Camera"( sa As HC_STRING , da As HC_DOUBLE ) 
 Declare Sub HC_QRotate_Object Cdecl Alias "HC_QRotate_Object"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QRotate_Object_Offaxis Cdecl Alias "HC_QRotate_Object_Offaxis"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QScale_Object Cdecl Alias "HC_QScale_Object"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Camera Cdecl Alias "HC_QSet_Camera"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , da As HC_DOUBLE, da As HC_DOUBLE,  sa As HC_STRING) 
 Declare Sub HC_QSet_Camera_By_Volume Cdecl Alias "HC_QSet_Camera_By_Volume"( sa As HC_STRING ,  sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Camera_Field Cdecl Alias "HC_QSet_Camera_Field"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Camera_Position Cdecl Alias "HC_QSet_Camera_Position"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Camera_Projection Cdecl Alias "HC_QSet_Camera_Projection"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Camera_Target Cdecl Alias "HC_QSet_Camera_Target"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Camera_Up_Vector Cdecl Alias "HC_QSet_Camera_Up_Vector"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Color Cdecl Alias "HC_QSet_Color"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Color_By_Index Cdecl Alias "HC_QSet_Color_By_Index"( sa As HC_STRING ,  sa As HC_STRING ,ia As HC_INTEGER) 
 Declare Sub HC_QSet_Color_By_Value Cdecl Alias "HC_QSet_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Color_Map Cdecl Alias "HC_QSet_Color_Map"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Color_Map_By_Value Cdecl Alias "HC_QSet_Color_Map_By_Value"( sa As HC_STRING ,  sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_QSet_Driver Cdecl Alias "HC_QSet_Driver"( sa As HC_STRING , hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_QSet_Driver_Options Cdecl Alias "HC_QSet_Driver_Options"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Edge_Pattern Cdecl Alias "HC_QSet_Edge_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Edge_Weight Cdecl Alias "HC_QSet_Edge_Weight"( sa As HC_STRING , da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Face_Pattern Cdecl Alias "HC_QSet_Face_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Handedness Cdecl Alias "HC_QSet_Handedness"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Heuristics Cdecl Alias "HC_QSet_Heuristics"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Line_Pattern Cdecl Alias "HC_QSet_Line_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Line_Weight Cdecl Alias "HC_QSet_Line_Weight"( sa As HC_STRING , da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Marker_Size Cdecl Alias "HC_QSet_Marker_Size"( sa As HC_STRING , da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Marker_Symbol Cdecl Alias "HC_QSet_Marker_Symbol"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Modelling_Matrix Cdecl Alias "HC_QSet_Modelling_Matrix"( sa As HC_STRING , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_QSet_Selectability Cdecl Alias "HC_QSet_Selectability"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Streaming_Mode Cdecl Alias "HC_QSet_Streaming_Mode"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Text_Alignment Cdecl Alias "HC_QSet_Text_Alignment"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Text_Font Cdecl Alias "HC_QSet_Text_Font"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Text_Path Cdecl Alias "HC_QSet_Text_Path"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Text_Size Cdecl Alias "HC_QSet_Text_Size"( sa As HC_STRING , da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Text_Spacing Cdecl Alias "HC_QSet_Text_Spacing"( sa As HC_STRING , da As HC_DOUBLE ) 
 Declare Sub HC_QSet_User_Options Cdecl Alias "HC_QSet_User_Options"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_User_Value Cdecl Alias "HC_QSet_User_Value"( sa As HC_STRING , hk As HC_KEY) 
 Declare Sub HC_QSet_Visibility Cdecl Alias "HC_QSet_Visibility"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Window Cdecl Alias "HC_QSet_Window"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QSet_Window_Frame Cdecl Alias "HC_QSet_Window_Frame"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QSet_Window_Pattern Cdecl Alias "HC_QSet_Window_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Camera Cdecl Alias "HC_QShow_Camera"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Camera_By_Volume Cdecl Alias "HC_QShow_Camera_By_Volume"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Camera_Field Cdecl Alias "HC_QShow_Camera_Field"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Camera_Position Cdecl Alias "HC_QShow_Camera_Position"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Camera_Projection Cdecl Alias "HC_QShow_Camera_Projection"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Camera_Target Cdecl Alias "HC_QShow_Camera_Target"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Camera_Up_Vector Cdecl Alias "HC_QShow_Camera_Up_Vector"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Color Cdecl Alias "HC_QShow_Color"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Color_By_Index Cdecl Alias "HC_QShow_Color_By_Index"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_QShow_Color_By_Value Cdecl Alias "HC_QShow_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Color_Map Cdecl Alias "HC_QShow_Color_Map"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Color_Map_By_Value Cdecl Alias "HC_QShow_Color_Map_By_Value"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_QShow_Color_Map_Count Cdecl Alias "HC_QShow_Color_Map_Count"( sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_QShow_Driver Cdecl Alias "HC_QShow_Driver"( sa As HC_STRING , hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_QShow_Driver_Options Cdecl Alias "HC_QShow_Driver_Options"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Edge_Pattern Cdecl Alias "HC_QShow_Edge_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Edge_Weight Cdecl Alias "HC_QShow_Edge_Weight"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Face_Pattern Cdecl Alias "HC_QShow_Face_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Handedness Cdecl Alias "HC_QShow_Handedness"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Heuristics Cdecl Alias "HC_QShow_Heuristics"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Line_Pattern Cdecl Alias "HC_QShow_Line_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Line_Weight Cdecl Alias "HC_QShow_Line_Weight"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Marker_Size Cdecl Alias "HC_QShow_Marker_Size"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Marker_Symbol Cdecl Alias "HC_QShow_Marker_Symbol"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Modelling_Matrix Cdecl Alias "HC_QShow_Modelling_Matrix"( sa As HC_STRING , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Camera Cdecl Alias "HC_QShow_Net_Camera"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Camera_By_Volume Cdecl Alias "HC_QShow_Net_Camera_By_Volume"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Camera_Field Cdecl Alias "HC_QShow_Net_Camera_Field"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Camera_Position Cdecl Alias "HC_QShow_Net_Camera_Position"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Camera_Projection Cdecl Alias "HC_QShow_Net_Camera_Projection"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Camera_Target Cdecl Alias "HC_QShow_Net_Camera_Target"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Camera_Up_Vector Cdecl Alias "HC_QShow_Net_Camera_Up_Vector"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Color Cdecl Alias "HC_QShow_Net_Color"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Color_By_Index Cdecl Alias "HC_QShow_Net_Color_By_Index"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_QShow_Net_Color_By_Value Cdecl Alias "HC_QShow_Net_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Color_Map Cdecl Alias "HC_QShow_Net_Color_Map"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Color_Map_By_Value Cdecl Alias "HC_QShow_Net_Color_Map_By_Value"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_QShow_Net_Color_Map_Count Cdecl Alias "HC_QShow_Net_Color_Map_Count"( sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_QShow_Net_Driver Cdecl Alias "HC_QShow_Net_Driver"( sa As HC_STRING , hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_QShow_Net_Driver_Options Cdecl Alias "HC_QShow_Net_Driver_Options"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Edge_Pattern Cdecl Alias "HC_QShow_Net_Edge_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Edge_Weight Cdecl Alias "HC_QShow_Net_Edge_Weight"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Face_Pattern Cdecl Alias "HC_QShow_Net_Face_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Handedness Cdecl Alias "HC_QShow_Net_Handedness"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Heuristics Cdecl Alias "HC_QShow_Net_Heuristics"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Line_Pattern Cdecl Alias "HC_QShow_Net_Line_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Line_Weight Cdecl Alias "HC_QShow_Net_Line_Weight"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Marker_Size Cdecl Alias "HC_QShow_Net_Marker_Size"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Marker_Symbol Cdecl Alias "HC_QShow_Net_Marker_Symbol"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Modelling_Matrix Cdecl Alias "HC_QShow_Net_Modelling_Matrix"( sa As HC_STRING , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Selectability Cdecl Alias "HC_QShow_Net_Selectability"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Streaming_Mode Cdecl Alias "HC_QShow_Net_Streaming_Mode"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Text_Alignment Cdecl Alias "HC_QShow_Net_Text_Alignment"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Text_Font Cdecl Alias "HC_QShow_Net_Text_Font"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Text_Path Cdecl Alias "HC_QShow_Net_Text_Path"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Text_Size Cdecl Alias "HC_QShow_Net_Text_Size"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Text_Spacing Cdecl Alias "HC_QShow_Net_Text_Spacing"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_User_Options Cdecl Alias "HC_QShow_Net_User_Options"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_User_Value Cdecl Alias "HC_QShow_Net_User_Value"( sa As HC_STRING , fa As HC_KEY Ptr) 
 Declare Sub HC_QShow_Net_Visibility Cdecl Alias "HC_QShow_Net_Visibility"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Window Cdecl Alias "HC_QShow_Net_Window"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Net_Window_Frame Cdecl Alias "HC_QShow_Net_Window_Frame"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Window_Pattern Cdecl Alias "HC_QShow_Net_Window_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Color Cdecl Alias "HC_QShow_One_Color"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Color_By_Index Cdecl Alias "HC_QShow_One_Color_By_Index"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_QShow_One_Color_By_Value Cdecl Alias "HC_QShow_One_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_One_Color_Map Cdecl Alias "HC_QShow_One_Color_Map"( sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Color_Map_By_Value Cdecl Alias "HC_QShow_One_Color_Map_By_Value"( sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_One_Driver_Option Cdecl Alias "HC_QShow_One_Driver_Option"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Heuristic Cdecl Alias "HC_QShow_One_Heuristic"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Color Cdecl Alias "HC_QShow_One_Net_Color"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Color_By_Index Cdecl Alias "HC_QShow_One_Net_Color_By_Index"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_QShow_One_Net_Color_By_Value Cdecl Alias "HC_QShow_One_Net_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_One_Net_Color_Map Cdecl Alias "HC_QShow_One_Net_Color_Map"( sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Color_Map_By_V Cdecl Alias "HC_QShow_One_Net_Color_Map_By_V"( sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_One_Net_Driver_Option Cdecl Alias "HC_QShow_One_Net_Driver_Option"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Heuristic Cdecl Alias "HC_QShow_One_Net_Heuristic"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Selectability Cdecl Alias "HC_QShow_One_Net_Selectability"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_User_Option Cdecl Alias "HC_QShow_One_Net_User_Option"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Visibility Cdecl Alias "HC_QShow_One_Net_Visibility"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Selectability Cdecl Alias "HC_QShow_One_Selectability"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_User_Option Cdecl Alias "HC_QShow_One_User_Option"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Visibility Cdecl Alias "HC_QShow_One_Visibility"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Selectability Cdecl Alias "HC_QShow_Selectability"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Streaming_Mode Cdecl Alias "HC_QShow_Streaming_Mode"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Text_Alignment Cdecl Alias "HC_QShow_Text_Alignment"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Text_Font Cdecl Alias "HC_QShow_Text_Font"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Text_Path Cdecl Alias "HC_QShow_Text_Path"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Text_Size Cdecl Alias "HC_QShow_Text_Size"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Text_Spacing Cdecl Alias "HC_QShow_Text_Spacing"( sa As HC_STRING , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_User_Options Cdecl Alias "HC_QShow_User_Options"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_User_Value Cdecl Alias "HC_QShow_User_Value"( sa As HC_STRING , fa As HC_KEY Ptr) 
 Declare Sub HC_QShow_Visibility Cdecl Alias "HC_QShow_Visibility"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Window Cdecl Alias "HC_QShow_Window"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_QShow_Window_Frame Cdecl Alias "HC_QShow_Window_Frame"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Window_Pattern Cdecl Alias "HC_QShow_Window_Pattern"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QTranslate_Object Cdecl Alias "HC_QTranslate_Object"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QUnSet_Camera Cdecl Alias "HC_QUnSet_Camera"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Color Cdecl Alias "HC_QUnSet_Color"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Color_Map Cdecl Alias "HC_QUnSet_Color_Map"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Driver Cdecl Alias "HC_QUnSet_Driver"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Driver_Options Cdecl Alias "HC_QUnSet_Driver_Options"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Edge_Pattern Cdecl Alias "HC_QUnSet_Edge_Pattern"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Edge_Weight Cdecl Alias "HC_QUnSet_Edge_Weight"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Face_Pattern Cdecl Alias "HC_QUnSet_Face_Pattern"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Handedness Cdecl Alias "HC_QUnSet_Handedness"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Heuristics Cdecl Alias "HC_QUnSet_Heuristics"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Line_Pattern Cdecl Alias "HC_QUnSet_Line_Pattern"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Line_Weight Cdecl Alias "HC_QUnSet_Line_Weight"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Marker_Size Cdecl Alias "HC_QUnSet_Marker_Size"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Marker_Symbol Cdecl Alias "HC_QUnSet_Marker_Symbol"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Modelling_Matrix Cdecl Alias "HC_QUnSet_Modelling_Matrix"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Selectability Cdecl Alias "HC_QUnSet_Selectability"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Streaming_Mode Cdecl Alias "HC_QUnSet_Streaming_Mode"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Text_Alignment Cdecl Alias "HC_QUnSet_Text_Alignment"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Text_Font Cdecl Alias "HC_QUnSet_Text_Font"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Text_Path Cdecl Alias "HC_QUnSet_Text_Path"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Text_Size Cdecl Alias "HC_QUnSet_Text_Size"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Text_Spacing Cdecl Alias "HC_QUnSet_Text_Spacing"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_User_Options Cdecl Alias "HC_QUnSet_User_Options"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_User_Value Cdecl Alias "HC_QUnSet_User_Value"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Visibility Cdecl Alias "HC_QUnSet_Visibility"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Window Cdecl Alias "HC_QUnSet_Window"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Window_Frame Cdecl Alias "HC_QUnSet_Window_Frame"( sa As HC_STRING) 
 Declare Sub HC_QUnSet_Window_Pattern Cdecl Alias "HC_QUnSet_Window_Pattern"( sa As HC_STRING) 
 Declare Sub HC_QZoom_Camera Cdecl Alias "HC_QZoom_Camera"( sa As HC_STRING , da As HC_DOUBLE ) 
 
 Declare Sub HC_Rename_Segment Cdecl Alias "HC_Rename_Segment"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Report_Error Cdecl Alias "HC_Report_Error"(ia As HC_INTEGER, ia As HC_INTEGER, b As HC_INTEGER ptr, ia As HC_INTEGER, c As HC_INTEGER ptr) 
 Declare Sub HC_Request_Location Cdecl Alias "HC_Request_Location"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Requeue_Event Cdecl Alias "HC_Requeue_Event"() 
 Declare Sub HC_Reset_System Cdecl Alias "HC_Reset_System"() 
 Declare Sub HC_Restart_Ink Cdecl Alias "HC_Restart_Ink"() 
 Declare Sub HC_Roll_Camera Cdecl Alias "HC_Roll_Camera"(da As HC_DOUBLE ) 
 Declare Sub HC_Rotate_Object Cdecl Alias "HC_Rotate_Object"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Rotate_Object_Offaxis Cdecl Alias "HC_Rotate_Object_Offaxis"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Scale_Object Cdecl Alias "HC_Scale_Object"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Scroll_Text Cdecl Alias "HC_Scroll_Text"(hk as HC_KEY , ia As HC_INTEGER,ia As HC_INTEGER) 
 Declare Sub HC_Set_Camera Cdecl Alias "HC_Set_Camera"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , da As HC_DOUBLE, da As HC_DOUBLE,  sa As HC_STRING) 
 Declare Sub HC_Set_Camera_By_Volume Cdecl Alias "HC_Set_Camera_By_Volume"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Camera_Field Cdecl Alias "HC_Set_Camera_Field"(da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Camera_Position Cdecl Alias "HC_Set_Camera_Position"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Camera_Projection Cdecl Alias "HC_Set_Camera_Projection"( sa As HC_STRING) 
 Declare Sub HC_Set_Camera_Target Cdecl Alias "HC_Set_Camera_Target"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Camera_Up_Vector Cdecl Alias "HC_Set_Camera_Up_Vector"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Color Cdecl Alias "HC_Set_Color"( sa As HC_STRING) 
 Declare Sub HC_Set_Color_By_Index Cdecl Alias "HC_Set_Color_By_Index"( sa As HC_STRING ,ia As HC_INTEGER) 
 Declare Sub HC_Set_Color_By_Value Cdecl Alias "HC_Set_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Color_Map Cdecl Alias "HC_Set_Color_Map"( sa As HC_STRING) 
 Declare Sub HC_Set_Color_Map_By_Value Cdecl Alias "HC_Set_Color_Map_By_Value"( sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Set_Driver Cdecl Alias "HC_Set_Driver"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_Set_Driver_Options Cdecl Alias "HC_Set_Driver_Options"( sa As HC_STRING) 
 Declare Sub HC_Set_Edge_Pattern Cdecl Alias "HC_Set_Edge_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Set_Edge_Weight Cdecl Alias "HC_Set_Edge_Weight"(da As HC_DOUBLE ) 
 Declare Sub HC_Set_Face_Pattern Cdecl Alias "HC_Set_Face_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Set_Handedness Cdecl Alias "HC_Set_Handedness"( sa As HC_STRING) 
 Declare Sub HC_Set_Heuristics Cdecl Alias "HC_Set_Heuristics"( sa As HC_STRING) 
 Declare Sub HC_Set_Line_Pattern Cdecl Alias "HC_Set_Line_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Set_Line_Weight Cdecl Alias "HC_Set_Line_Weight"(da As HC_DOUBLE ) 
 Declare Sub HC_Set_Marker_Size Cdecl Alias "HC_Set_Marker_Size"(da As HC_DOUBLE ) 
 Declare Sub HC_Set_Marker_Symbol Cdecl Alias "HC_Set_Marker_Symbol"( sa As HC_STRING) 
 Declare Sub HC_Set_Modelling_Matrix Cdecl Alias "HC_Set_Modelling_Matrix"(matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Set_Selectability Cdecl Alias "HC_Set_Selectability"( sa As HC_STRING) 
 Declare Sub HC_Set_Streaming_Mode Cdecl Alias "HC_Set_Streaming_Mode"( sa As HC_STRING) 
 Declare Sub HC_Set_Text_Alignment Cdecl Alias "HC_Set_Text_Alignment"( sa As HC_STRING) 
 Declare Sub HC_Set_Text_Font Cdecl Alias "HC_Set_Text_Font"( sa As HC_STRING) 
 Declare Sub HC_Set_Text_Path Cdecl Alias "HC_Set_Text_Path"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Text_Size Cdecl Alias "HC_Set_Text_Size"(da As HC_DOUBLE ) 
 Declare Sub HC_Set_Text_Spacing Cdecl Alias "HC_Set_Text_Spacing"(da As HC_DOUBLE ) 
 Declare Sub HC_Set_User_Options Cdecl Alias "HC_Set_User_Options"( sa As HC_STRING) 
 Declare Sub HC_Set_User_Value Cdecl Alias "HC_Set_User_Value"(hk as HC_KEY) 
 Declare Sub HC_Set_Visibility Cdecl Alias "HC_Set_Visibility"( sa As HC_STRING) 
 Declare Sub HC_Set_Window Cdecl Alias "HC_Set_Window"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Set_Window_Frame Cdecl Alias "HC_Set_Window_Frame"( sa As HC_STRING) 
 Declare Sub HC_Set_Window_Pattern Cdecl Alias "HC_Set_Window_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Button Cdecl Alias "HC_Show_Button"( sa As HC_STRING) 
 Declare Sub HC_Show_Button_Source Cdecl Alias "HC_Show_Button_Source"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Camera Cdecl Alias "HC_Show_Camera"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr ,  sa As HC_STRING) 
 Declare Sub HC_Show_Camera_By_Volume Cdecl Alias "HC_Show_Camera_By_Volume"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Camera_Field Cdecl Alias "HC_Show_Camera_Field"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Camera_Position Cdecl Alias "HC_Show_Camera_Position"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Camera_Projection Cdecl Alias "HC_Show_Camera_Projection"( sa As HC_STRING) 
 Declare Sub HC_Show_Camera_Target Cdecl Alias "HC_Show_Camera_Target"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Camera_Up_Vector Cdecl Alias "HC_Show_Camera_Up_Vector"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Color Cdecl Alias "HC_Show_Color"( sa As HC_STRING) 
 Declare Sub HC_Show_Color_By_Index Cdecl Alias "HC_Show_Color_By_Index"( sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Color_By_Value Cdecl Alias "HC_Show_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Color_Map Cdecl Alias "HC_Show_Color_Map"( sa As HC_STRING) 
 Declare Sub HC_Show_Color_Map_By_Value Cdecl Alias "HC_Show_Color_Map_By_Value"( sa As HC_STRING , fa As HC_INTEGER Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Color_Map_Count Cdecl Alias "HC_Show_Color_Map_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Driver Cdecl Alias "HC_Show_Driver"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_Show_Driver_Options Cdecl Alias "HC_Show_Driver_Options"( sa As HC_STRING) 
 Declare Sub HC_Show_Edge_Pattern Cdecl Alias "HC_Show_Edge_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Edge_Weight Cdecl Alias "HC_Show_Edge_Weight"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Face_Pattern Cdecl Alias "HC_Show_Face_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Handedness Cdecl Alias "HC_Show_Handedness"( sa As HC_STRING) 
 Declare Sub HC_Show_Heuristics Cdecl Alias "HC_Show_Heuristics"( sa As HC_STRING) 
 Declare Sub HC_Show_Line_Pattern Cdecl Alias "HC_Show_Line_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Line_Weight Cdecl Alias "HC_Show_Line_Weight"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Location Cdecl Alias "HC_Show_Location"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Location_Source Cdecl Alias "HC_Show_Location_Source"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Location_Status Cdecl Alias "HC_Show_Location_Status"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Marker_Size Cdecl Alias "HC_Show_Marker_Size"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Marker_Symbol Cdecl Alias "HC_Show_Marker_Symbol"( sa As HC_STRING) 
 Declare Sub HC_Show_Modelling_Matrix Cdecl Alias "HC_Show_Modelling_Matrix"(matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Camera Cdecl Alias "HC_Show_Net_Camera"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr ,  sa As HC_STRING) 
 Declare Sub HC_Show_Net_Camera_By_Volume Cdecl Alias "HC_Show_Net_Camera_By_Volume"( sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Camera_Field Cdecl Alias "HC_Show_Net_Camera_Field"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Camera_Position Cdecl Alias "HC_Show_Net_Camera_Position"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Camera_Projection Cdecl Alias "HC_Show_Net_Camera_Projection"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Camera_Target Cdecl Alias "HC_Show_Net_Camera_Target"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Camera_Up_Vector Cdecl Alias "HC_Show_Net_Camera_Up_Vector"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Color Cdecl Alias "HC_Show_Net_Color"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Color_By_Index Cdecl Alias "HC_Show_Net_Color_By_Index"( sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Net_Color_By_Value Cdecl Alias "HC_Show_Net_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Color_Map Cdecl Alias "HC_Show_Net_Color_Map"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Color_Map_By_Value Cdecl Alias "HC_Show_Net_Color_Map_By_Value"( sa As HC_STRING , fa As HC_INTEGER Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Net_Color_Map_Count Cdecl Alias "HC_Show_Net_Color_Map_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Net_Driver Cdecl Alias "HC_Show_Net_Driver"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_Show_Net_Driver_Options Cdecl Alias "HC_Show_Net_Driver_Options"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Edge_Pattern Cdecl Alias "HC_Show_Net_Edge_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Edge_Weight Cdecl Alias "HC_Show_Net_Edge_Weight"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Face_Pattern Cdecl Alias "HC_Show_Net_Face_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Handedness Cdecl Alias "HC_Show_Net_Handedness"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Heuristics Cdecl Alias "HC_Show_Net_Heuristics"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Line_Pattern Cdecl Alias "HC_Show_Net_Line_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Line_Weight Cdecl Alias "HC_Show_Net_Line_Weight"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Marker_Size Cdecl Alias "HC_Show_Net_Marker_Size"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Marker_Symbol Cdecl Alias "HC_Show_Net_Marker_Symbol"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Modelling_Matrix Cdecl Alias "HC_Show_Net_Modelling_Matrix"(matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Selectability Cdecl Alias "HC_Show_Net_Selectability"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Streaming_Mode Cdecl Alias "HC_Show_Net_Streaming_Mode"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Text_Alignment Cdecl Alias "HC_Show_Net_Text_Alignment"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Text_Font Cdecl Alias "HC_Show_Net_Text_Font"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Text_Path Cdecl Alias "HC_Show_Net_Text_Path"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Text_Size Cdecl Alias "HC_Show_Net_Text_Size"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Text_Spacing Cdecl Alias "HC_Show_Net_Text_Spacing"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_User_Options Cdecl Alias "HC_Show_Net_User_Options"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_User_Value Cdecl Alias "HC_Show_Net_User_Value"( hc As HC_KEY Ptr) 
 Declare Sub HC_Show_Net_Visibility Cdecl Alias "HC_Show_Net_Visibility"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Window Cdecl Alias "HC_Show_Net_Window"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Net_Window_Frame Cdecl Alias "HC_Show_Net_Window_Frame"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Window_Pattern Cdecl Alias "HC_Show_Net_Window_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Show_One_Color Cdecl Alias "HC_Show_One_Color"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Color_By_Index Cdecl Alias "HC_Show_One_Color_By_Index"( sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_One_Color_By_Value Cdecl Alias "HC_Show_One_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_One_Color_Map Cdecl Alias "HC_Show_One_Color_Map"(ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Color_Map_By_Value Cdecl Alias "HC_Show_One_Color_Map_By_Value"(ia As HC_INTEGER,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_One_Driver_Option Cdecl Alias "HC_Show_One_Driver_Option"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Heuristic Cdecl Alias "HC_Show_One_Heuristic"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Color Cdecl Alias "HC_Show_One_Net_Color"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Color_By_Index Cdecl Alias "HC_Show_One_Net_Color_By_Index"( sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_One_Net_Color_By_Value Cdecl Alias "HC_Show_One_Net_Color_By_Value"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_One_Net_Color_Map Cdecl Alias "HC_Show_One_Net_Color_Map"(ia As HC_INTEGER,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Color_Map_By_V Cdecl Alias "HC_Show_One_Net_Color_Map_By_V"(ia As HC_INTEGER,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_One_Net_Driver_Option Cdecl Alias "HC_Show_One_Net_Driver_Option"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Heuristic Cdecl Alias "HC_Show_One_Net_Heuristic"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Selectability Cdecl Alias "HC_Show_One_Net_Selectability"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_User_Option Cdecl Alias "HC_Show_One_Net_User_Option"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Visibility Cdecl Alias "HC_Show_One_Net_Visibility"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Selectability Cdecl Alias "HC_Show_One_Selectability"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_User_Option Cdecl Alias "HC_Show_One_User_Option"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Visibility Cdecl Alias "HC_Show_One_Visibility"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Selectability Cdecl Alias "HC_Show_Selectability"( sa As HC_STRING) 
 Declare Sub HC_Show_Selection Cdecl Alias "HC_Show_Selection"( sa As HC_STRING) 
 Declare Sub HC_Show_Selection_Item Cdecl Alias "HC_Show_Selection_Item"( hc As HC_KEY Ptr , fa As HC_INTEGER Ptr , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Selection_Location Cdecl Alias "HC_Show_Selection_Location"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Selection_Pathname Cdecl Alias "HC_Show_Selection_Pathname"( sa As HC_STRING) 
 Declare Sub HC_Show_Selection_Source Cdecl Alias "HC_Show_Selection_Source"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Streaming_Mode Cdecl Alias "HC_Show_Streaming_Mode"( sa As HC_STRING) 
 Declare Sub HC_Show_String Cdecl Alias "HC_Show_String"( sa As HC_STRING) 
 Declare Sub HC_Show_String_Source Cdecl Alias "HC_Show_String_Source"( sa As HC_STRING , fa As HC_KEY Ptr) 
 Declare Sub HC_Show_Text_Alignment Cdecl Alias "HC_Show_Text_Alignment"( sa As HC_STRING) 
 Declare Sub HC_Show_Text_Font Cdecl Alias "HC_Show_Text_Font"( sa As HC_STRING) 
 Declare Sub HC_Show_Text_Path Cdecl Alias "HC_Show_Text_Path"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Text_Size Cdecl Alias "HC_Show_Text_Size"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Text_Spacing Cdecl Alias "HC_Show_Text_Spacing"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Time Cdecl Alias "HC_Show_Time"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_User_Options Cdecl Alias "HC_Show_User_Options"( sa As HC_STRING) 
 Declare Sub HC_Show_User_Value Cdecl Alias "HC_Show_User_Value"( hc As HC_KEY Ptr) 
 Declare Sub HC_Show_Visibility Cdecl Alias "HC_Show_Visibility"( sa As HC_STRING) 
 Declare Sub HC_Show_Wakeup Cdecl Alias "HC_Show_Wakeup"( hc As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Window Cdecl Alias "HC_Show_Window"( hc As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Window_Frame Cdecl Alias "HC_Show_Window_Frame"( sa As HC_STRING) 
 Declare Sub HC_Show_Window_Pattern Cdecl Alias "HC_Show_Window_Pattern"( sa As HC_STRING) 
 Declare Sub HC_Style_Segment Cdecl Alias "HC_Style_Segment"( sa As HC_STRING) 
 Declare Sub HC_Translate_Object Cdecl Alias "HC_Translate_Object"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_UnDefine_Alias Cdecl Alias "HC_UnDefine_Alias"( sa As HC_STRING) 
 Declare Sub HC_UnDefine_Color Cdecl Alias "HC_UnDefine_Color"( sa As HC_STRING) 
 Declare Sub HC_UnDefine_Error_Handler Cdecl Alias "HC_UnDefine_Error_Handler"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_UnDefine_Exit_Handler Cdecl Alias "HC_UnDefine_Exit_Handler"(hc_error as HC_INTEGER Ptr) 
 Declare Sub HC_UnSet_Camera Cdecl Alias "HC_UnSet_Camera"() 
 Declare Sub HC_UnSet_Color Cdecl Alias "HC_UnSet_Color"() 
 Declare Sub HC_UnSet_Color_Map Cdecl Alias "HC_UnSet_Color_Map"() 
 Declare Sub HC_UnSet_Driver Cdecl Alias "HC_UnSet_Driver"() 
 Declare Sub HC_UnSet_Driver_Options Cdecl Alias "HC_UnSet_Driver_Options"() 
 Declare Sub HC_UnSet_Edge_Pattern Cdecl Alias "HC_UnSet_Edge_Pattern"() 
 Declare Sub HC_UnSet_Edge_Weight Cdecl Alias "HC_UnSet_Edge_Weight"() 
 Declare Sub HC_UnSet_Face_Pattern Cdecl Alias "HC_UnSet_Face_Pattern"() 
 Declare Sub HC_UnSet_Handedness Cdecl Alias "HC_UnSet_Handedness"() 
 Declare Sub HC_UnSet_Heuristics Cdecl Alias "HC_UnSet_Heuristics"() 
 Declare Sub HC_UnSet_Line_Pattern Cdecl Alias "HC_UnSet_Line_Pattern"() 
 Declare Sub HC_UnSet_Line_Weight Cdecl Alias "HC_UnSet_Line_Weight"() 
 Declare Sub HC_UnSet_Marker_Size Cdecl Alias "HC_UnSet_Marker_Size"() 
 Declare Sub HC_UnSet_Marker_Symbol Cdecl Alias "HC_UnSet_Marker_Symbol"() 
 Declare Sub HC_UnSet_Modelling_Matrix Cdecl Alias "HC_UnSet_Modelling_Matrix"() 
 Declare Sub HC_UnSet_Selectability Cdecl Alias "HC_UnSet_Selectability"() 
 Declare Sub HC_UnSet_Streaming_Mode Cdecl Alias "HC_UnSet_Streaming_Mode"() 
 Declare Sub HC_UnSet_Text_Alignment Cdecl Alias "HC_UnSet_Text_Alignment"() 
 Declare Sub HC_UnSet_Text_Font Cdecl Alias "HC_UnSet_Text_Font"() 
 Declare Sub HC_UnSet_Text_Path Cdecl Alias "HC_UnSet_Text_Path"() 
 Declare Sub HC_UnSet_Text_Size Cdecl Alias "HC_UnSet_Text_Size"() 
 Declare Sub HC_UnSet_Text_Spacing Cdecl Alias "HC_UnSet_Text_Spacing"() 
 Declare Sub HC_UnSet_User_Options Cdecl Alias "HC_UnSet_User_Options"() 
 Declare Sub HC_UnSet_User_Value Cdecl Alias "HC_UnSet_User_Value"() 
 Declare Sub HC_UnSet_Visibility Cdecl Alias "HC_UnSet_Visibility"() 
 Declare Sub HC_UnSet_Window Cdecl Alias "HC_UnSet_Window"() 
 Declare Sub HC_UnSet_Window_Frame Cdecl Alias "HC_UnSet_Window_Frame"() 
 Declare Sub HC_UnSet_Window_Pattern Cdecl Alias "HC_UnSet_Window_Pattern"() 
 Declare Sub HC_Update_Display Cdecl Alias "HC_Update_Display"() 
 Declare Sub HC_Zoom_Camera Cdecl Alias "HC_Zoom_Camera"(da As HC_DOUBLE ) 
 Declare Sub HC_Begin_Alias_Search Cdecl Alias "HC_Begin_Alias_Search"() 
 Declare Sub HC_Begin_Color_Name_Search Cdecl Alias "HC_Begin_Color_Name_Search"() 
 Declare Sub HC_Begin_Contents_Search Cdecl Alias "HC_Begin_Contents_Search"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Begin_Open_Segment_Search Cdecl Alias "HC_Begin_Open_Segment_Search"() 
 Declare Sub HC_Begin_Segment_Search Cdecl Alias "HC_Begin_Segment_Search"( sa As HC_STRING) 
 Declare Sub HC_Define_Color_Name Cdecl Alias "HC_Define_Color_Name"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_End_Alias_Search Cdecl Alias "HC_End_Alias_Search"() 
 Declare Sub HC_End_Color_Name_Search Cdecl Alias "HC_End_Color_Name_Search"() 
 Declare Sub HC_End_Contents_Search Cdecl Alias "HC_End_Contents_Search"() 
 Declare Sub HC_End_Open_Segment_Search Cdecl Alias "HC_End_Open_Segment_Search"() 
 Declare Sub HC_End_Segment_Search Cdecl Alias "HC_End_Segment_Search"()  
 Declare Sub HC_Queue_Button_Event Cdecl Alias "HC_Queue_Button_Event"( sa As HC_STRING ,  sa As HC_STRING ,ia As HC_INTEGER) 
 Declare Sub HC_Queue_Location_Event Cdecl Alias "HC_Queue_Location_Event"( sa As HC_STRING ,  sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER,ia As HC_INTEGER) 
 Declare Sub HC_Queue_Related_Selection Cdecl Alias "HC_Queue_Related_Selection"( sa As HC_STRING , hk As HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Queue_Selection_Event Cdecl Alias "HC_Queue_Selection_Event"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING , hk As HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Queue_String_Event Cdecl Alias "HC_Queue_String_Event"( sa As HC_STRING ,  sa As HC_STRING , hk As HC_KEY) 
 Declare Sub HC_Queue_Wakeup_Event Cdecl Alias "HC_Queue_Wakeup_Event"(da As HC_DOUBLE ) 
 Declare Sub HC_Queue_Special_Event Cdecl Alias "HC_Queue_Special_Event"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Alias Cdecl Alias "HC_Show_Alias"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Alias_Count Cdecl Alias "HC_Show_Alias_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Color_Name_Count Cdecl Alias "HC_Show_Color_Name_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Color_Name Cdecl Alias "HC_Show_Color_Name"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Contents_Count Cdecl Alias "HC_Show_Contents_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Distant_Light Cdecl Alias "HC_Show_Distant_Light"(hk as HC_KEY , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Include_Segment Cdecl Alias "HC_Show_Include_Segment"(hk as HC_KEY ,  sa As HC_STRING) 
 Declare Sub HC_Show_Key_Type Cdecl Alias "HC_Show_Key_Type"(hk as HC_KEY ,  sa As HC_STRING) 
 Declare Sub HC_Show_Line Cdecl Alias "HC_Show_Line"(hk as HC_KEY , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Marker Cdecl Alias "HC_Show_Marker"(hk as HC_KEY , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Show_Memory_Usage Cdecl Alias "HC_Show_Memory_Usage"( hc As HC_KEY Ptr , fa As HC_KEY Ptr) 
 Declare Sub HC_Show_Open_Segment_Count Cdecl Alias "HC_Show_Open_Segment_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Owner Cdecl Alias "HC_Show_Owner"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Owner_By_Key Cdecl Alias "HC_Show_Owner_By_Key"(hk as HC_KEY ,  sa As HC_STRING) 
 Declare Sub HC_Show_Partial_Pixel_Array Cdecl Alias "HC_Show_Partial_Pixel_Array"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) 
 Declare Sub HC_Show_Partial_Polygon Cdecl Alias "HC_Show_Partial_Polygon"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Partial_Polyline Cdecl Alias "HC_Show_Partial_Polyline"(hk as HC_KEY , ia As HC_INTEGER, ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Pathname_Expansion Cdecl Alias "HC_Show_Pathname_Expansion"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Pixel_Array Cdecl Alias "HC_Show_Pixel_Array"(hk as HC_KEY , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_INTEGER Ptr , fa As HC_INTEGER Ptr , hp As HC_PIXEL) 
 Declare Sub HC_Show_Pixel_Array_Size Cdecl Alias "HC_Show_Pixel_Array_Size"(hk as HC_KEY , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_INTEGER Ptr , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Polygon Cdecl Alias "HC_Show_Polygon"(hk as HC_KEY , fa As HC_INTEGER Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Polygon_Count Cdecl Alias "HC_Show_Polygon_Count"(hk as HC_KEY , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Polyline Cdecl Alias "HC_Show_Polyline"(hk as HC_KEY , fa As HC_INTEGER Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Polyline_Count Cdecl Alias "HC_Show_Polyline_Count"(hk as HC_KEY , fa As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Segment Cdecl Alias "HC_Show_Segment"(hk as HC_KEY ,  sa As HC_STRING) 
 Declare Sub HC_Show_Segment_Count Cdecl Alias "HC_Show_Segment_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_Show_Special_Event Cdecl Alias "HC_Show_Special_Event"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Style_Segment Cdecl Alias "HC_Show_Style_Segment"(hk as HC_KEY ,  sa As HC_STRING) 
 Declare Sub HC_Show_Text Cdecl Alias "HC_Show_Text"(hk as HC_KEY , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr ,  sa As HC_STRING) 
 Declare Sub HC_Show_Text_Length Cdecl Alias "HC_Show_Text_Length"(hk as HC_KEY , fa As HC_INTEGER Ptr) 
 Declare Sub HC_UnDefine_Color_Name Cdecl Alias "HC_UnDefine_Color_Name"( sa As HC_STRING) 
 Declare Sub HC_Define_System_Options Cdecl Alias "HC_Define_System_Options"( sa As HC_STRING) 
 Declare Sub HC_QSet_Metafile Cdecl Alias "HC_QSet_Metafile"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Metafile Cdecl Alias "HC_QShow_Metafile"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_Net_Metafile Cdecl Alias "HC_QShow_Net_Metafile"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Metafile Cdecl Alias "HC_QShow_One_Metafile"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Metafile Cdecl Alias "HC_QShow_One_Net_Metafile"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QUnSet_Metafile Cdecl Alias "HC_QUnSet_Metafile"( sa As HC_STRING) 
 Declare Sub HC_Set_Metafile Cdecl Alias "HC_Set_Metafile"( sa As HC_STRING) 
 Declare Sub HC_Show_Device_Info Cdecl Alias "HC_Show_Device_Info"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Metafile Cdecl Alias "HC_Show_Metafile"( sa As HC_STRING) 
 Declare Sub HC_Show_Net_Metafile Cdecl Alias "HC_Show_Net_Metafile"( sa As HC_STRING) 
 Declare Sub HC_Show_One_Metafile Cdecl Alias "HC_Show_One_Metafile"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Metafile Cdecl Alias "HC_Show_One_Net_Metafile"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_System_Option Cdecl Alias "HC_Show_One_System_Option"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_System_Options Cdecl Alias "HC_Show_System_Options"( sa As HC_STRING) 
 Declare Sub HC_UnSet_Metafile Cdecl Alias "HC_UnSet_Metafile"() 
 Declare Sub HC_QShow_One_Text_Font Cdecl Alias "HC_QShow_One_Text_Font"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QShow_One_Net_Text_Font Cdecl Alias "HC_QShow_One_Net_Text_Font"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Text_Font Cdecl Alias "HC_Show_One_Text_Font"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_One_Net_Text_Font Cdecl Alias "HC_Show_One_Net_Text_Font"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_QInsert_Distant_Light Cdecl Alias "HC_QInsert_Distant_Light"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QInsert_Ink Cdecl Alias "HC_QInsert_Ink"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QInsert_Line Cdecl Alias "HC_QInsert_Line"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QInsert_Marker Cdecl Alias "HC_QInsert_Marker"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_QInsert_Pixel_Array Cdecl Alias "HC_QInsert_Pixel_Array"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) 
 Declare Sub HC_QInsert_Pixel_Array_By_Ref Cdecl Alias "HC_QInsert_Pixel_Array_By_Ref"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) 
 Declare Sub HC_QInsert_Polygon Cdecl Alias "HC_QInsert_Polygon"( sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_QInsert_Polyline Cdecl Alias "HC_QInsert_Polyline"( sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) 
 Declare Sub HC_QInsert_Text Cdecl Alias "HC_QInsert_Text"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE,  sa As HC_STRING) 
 Declare Sub HC_QRestart_Ink Cdecl Alias "HC_QRestart_Ink"( sa As HC_STRING) 
 Declare Sub HC_Begin_Font_Search Cdecl Alias "HC_Begin_Font_Search"( sa As HC_STRING ,  sa As HC_STRING) 
 Declare Sub HC_Show_Font_Count Cdecl Alias "HC_Show_Font_Count"( hc As HC_INTEGER Ptr) 
 Declare Sub HC_End_Font_Search Cdecl Alias "HC_End_Font_Search"() 
 Declare Sub HC_Show_Font_Info Cdecl Alias "HC_Show_Font_Info"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) 
 '
 Declare Sub HC_Compute_Text_Extent Cdecl Alias "HC_Compute_Text_Extent"( sa As HC_STRING ,  sa As HC_STRING , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Cross_Product Cdecl Alias "HC_Compute_Cross_Product"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Compute_Matrix_Product Cdecl Alias "HC_Compute_Matrix_Product"(matrix As HC_SINGLE ptr , matrix As HC_SINGLE ptr , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Matrix_Adjoint Cdecl Alias "HC_Compute_Matrix_Adjoint"(matrix As HC_SINGLE ptr , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Normalized_Matrix Cdecl Alias "HC_Compute_Normalized_Matrix"(matrix As HC_SINGLE ptr , matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Normalized_Vector Cdecl Alias "HC_Compute_Normalized_Vector"( hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Compute_Identity_Matrix Cdecl Alias "HC_Compute_Identity_Matrix"(matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Scale_Matrix Cdecl Alias "HC_Compute_Scale_Matrix"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Translation_Matrix Cdecl Alias "HC_Compute_Translation_Matrix"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Rotation_Matrix Cdecl Alias "HC_Compute_Rotation_Matrix"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Offaxis_Rotation Cdecl Alias "HC_Compute_Offaxis_Rotation"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Offcenter_Rotation Cdecl Alias "HC_Compute_Offcenter_Rotation"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, matrix As HC_SINGLE Ptr) 
 Declare Sub HC_Compute_Polygon_Normal Cdecl Alias "HC_Compute_Polygon_Normal"(ia As HC_INTEGER, hc As HC_POINT Ptr ,  sa As HC_STRING , hc As HC_POINT Ptr) 
 Declare Sub HC_Compute_Polygon_Plane Cdecl Alias "HC_Compute_Polygon_Plane"(ia As HC_INTEGER, hc As HC_POINT Ptr ,  sa As HC_STRING , hc As HC_POINT Ptr) 
 Declare Sub HC_Compute_Transformed_Plane Cdecl Alias "HC_Compute_Transformed_Plane"( hc As HC_POINT Ptr , matrix As HC_SINGLE Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Compute_Transformed_Points Cdecl Alias "HC_Compute_Transformed_Points"(ia As HC_INTEGER, hc As HC_POINT Ptr , matrix As HC_SINGLE Ptr , hc As HC_POINT Ptr) 
 '
 Declare Sub HC_Insert_Circular_Arc   Cdecl Alias "HC_Insert_Circular_Arc"  ( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Circular_Chord Cdecl Alias "HC_Insert_Circular_Chord"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Circular_Wedge Cdecl Alias "HC_Insert_Circular_Wedge"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 '
 Declare Sub HC_Insert_Ellipse Cdecl Alias "HC_Insert_Ellipse"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Insert_Elliptical_Arc Cdecl Alias "HC_Insert_Elliptical_Arc"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Insert_Circle Cdecl Alias "HC_Insert_Circle"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr)  
 Declare Sub HC_QInsert_Circle Cdecl Alias "HC_QInsert_Circle"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_QInsert_Circular_Arc Cdecl Alias "HC_QInsert_Circular_Arc"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_QInsert_Ellipse Cdecl Alias "HC_QInsert_Ellipse"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_QInsert_Elliptical_Arc Cdecl Alias "HC_QInsert_Elliptical_Arc"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , da As HC_DOUBLE, da As HC_DOUBLE ) 
 Declare Sub HC_Show_Circle Cdecl Alias "HC_Show_Circle"(hk as HC_KEY , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Circular_Arc Cdecl Alias "HC_Show_Circular_Arc"(hk as HC_KEY , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Ellipse Cdecl Alias "HC_Show_Ellipse"(hk as HC_KEY , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) 
 Declare Sub HC_Show_Elliptical_Arc Cdecl Alias "HC_Show_Elliptical_Arc"(hk as HC_KEY , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , fa As HC_SINGLE Ptr , fa As HC_SINGLE Ptr) 

'' -----------------

 Declare Function HC_QKInsert_Distant_Light Cdecl Alias "HC_QKInsert_Distant_Light"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_QKInsert_Ink Cdecl Alias "HC_QKInsert_Ink"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_QKInsert_Line Cdecl Alias "HC_QKInsert_Line"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_QKInsert_Marker Cdecl Alias "HC_QKInsert_Marker"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_QKInsert_Pixel_Array Cdecl Alias "HC_QKInsert_Pixel_Array"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) As HC_KEY 
 Declare Function HC_QKInsert_Pixel_Array_By_Ref Cdecl Alias "HC_QKInsert_Pixel_Array_By_Ref"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) As HC_KEY 
 Declare Function HC_QKInsert_Polygon Cdecl Alias "HC_QKInsert_Polygon"( sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_QKInsert_Polyline Cdecl Alias "HC_QKInsert_Polyline"( sa As HC_STRING , ia As HC_INTEGER, hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_QKInsert_Text Cdecl Alias "HC_QKInsert_Text"( sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE,  sa As HC_STRING) As HC_KEY 
 Declare Function HC_Compute_Coordinates Cdecl Alias "HC_Compute_Coordinates"( sa As HC_STRING ,  sa As HC_STRING , hc As HC_POINT Ptr ,  sa As HC_STRING , hc As HC_POINT Ptr) As HC_BOOLEAN 
 Declare Function HC_Compute_Color Cdecl Alias "HC_Compute_Color"( sa As HC_STRING ,  sa As HC_STRING , hc As HC_POINT Ptr) As HC_BOOLEAN 
 Declare Function HC_Compute_Color_By_Value Cdecl Alias "HC_Compute_Color_By_Value"( sa As HC_STRING , hc As HC_POINT Ptr ,  sa As HC_STRING , hc As HC_POINT Ptr) As HC_BOOLEAN 
 Declare Function HC_Find_Font Cdecl Alias "HC_Find_Font"( sa As HC_STRING) As HC_BOOLEAN 
 Declare Function HC_Compute_Dot_Product Cdecl Alias "HC_Compute_Dot_Product"( hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_SINGLE 
 Declare Function HC_Compute_Vector_Length Cdecl Alias "HC_Compute_Vector_Length"( hc As HC_POINT Ptr) As HC_SINGLE 
 Declare Function HC_Compute_Matrix_Determinant Cdecl Alias "HC_Compute_Matrix_Determinant"(matrix As HC_SINGLE Ptr) As HC_SINGLE 
 Declare Function HC_Compute_Matrix_Inverse Cdecl Alias "HC_Compute_Matrix_Inverse"(matrix As HC_SINGLE ptr , matrix As HC_SINGLE ptr) As HC_BOOLEAN 
 Declare Function HC_KInsert_Circle Cdecl Alias "HC_KInsert_Circle"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_KInsert_Circular_Arc Cdecl Alias "HC_KInsert_Circular_Arc"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_KInsert_Ellipse Cdecl Alias "HC_KInsert_Ellipse"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_KInsert_Elliptical_Arc Cdecl Alias "HC_KInsert_Elliptical_Arc"( hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_QKInsert_Circle Cdecl Alias "HC_QKInsert_Circle"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_QKInsert_Circular_Arc Cdecl Alias "HC_QKInsert_Circular_Arc"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_QKInsert_Ellipse Cdecl Alias "HC_QKInsert_Ellipse"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_QKInsert_Elliptical_Arc Cdecl Alias "HC_QKInsert_Elliptical_Arc"( sa As HC_STRING , hc As HC_POINT Ptr , hc As HC_POINT Ptr , hc As HC_POINT Ptr , da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_Check_For_Events Cdecl Alias "HC_Check_For_Events"() As HC_INTEGER 
 Declare Function HC_Compute_Selection Cdecl Alias "HC_Compute_Selection"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE ) As HC_INTEGER 
 Declare Function HC_Compute_Selection_By_Area Cdecl Alias "HC_Compute_Selection_By_Area"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING , da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_INTEGER 
 Declare Function HC_KCopy_Segment Cdecl Alias "HC_KCopy_Segment"( sa As HC_STRING ,  sa As HC_STRING) As HC_KEY 
 Declare Function HC_KCreate_Segment Cdecl Alias "HC_KCreate_Segment"( sa As HC_STRING) As HC_KEY 
 Declare Function HC_KInclude_Segment Cdecl Alias "HC_KInclude_Segment"( sa As HC_STRING) As HC_KEY 
 Declare Function HC_KInsert_Distant_Light Cdecl Alias "HC_KInsert_Distant_Light"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_KInsert_Ink Cdecl Alias "HC_KInsert_Ink"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_KInsert_Line Cdecl Alias "HC_KInsert_Line"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_KInsert_Marker Cdecl Alias "HC_KInsert_Marker"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE ) As HC_KEY 
 Declare Function HC_KInsert_Pixel_Array Cdecl Alias "HC_KInsert_Pixel_Array"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) As HC_KEY 
 Declare Function HC_KInsert_Pixel_Array_By_Ref Cdecl Alias "HC_KInsert_Pixel_Array_By_Ref"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE, ia As HC_INTEGER, ia As HC_INTEGER, hp As HC_PIXEL) As HC_KEY 
 Declare Function HC_KInsert_Polygon Cdecl Alias "HC_KInsert_Polygon"(ia As HC_INTEGER, hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_KInsert_Polyline Cdecl Alias "HC_KInsert_Polyline"(ia As HC_INTEGER, hc As HC_POINT Ptr) As HC_KEY 
 Declare Function HC_KInsert_String_Cursor Cdecl Alias "HC_KInsert_String_Cursor"(hk as HC_KEY , ia As HC_INTEGER,ia As HC_INTEGER) As HC_KEY 
 Declare Function HC_KInsert_Text Cdecl Alias "HC_KInsert_Text"(da As HC_DOUBLE, da As HC_DOUBLE, da As HC_DOUBLE,  sa As HC_STRING) As HC_KEY 
 Declare Function HC_KOpen_Segment Cdecl Alias "HC_KOpen_Segment"( sa As HC_STRING) As HC_KEY 
 Declare Function HC_KStyle_Segment Cdecl Alias "HC_KStyle_Segment"( sa As HC_STRING) As HC_KEY 
 Declare Function HC_Find_Alias Cdecl Alias "HC_Find_Alias"( sa As HC_STRING) As HC_BOOLEAN 
 Declare Function HC_Find_Color_Name Cdecl Alias "HC_Find_Color_Name"( sa As HC_STRING ,  sa As HC_STRING ,  sa As HC_STRING) As HC_BOOLEAN 
 Declare Function HC_Find_Contents Cdecl Alias "HC_Find_Contents"( sa As HC_STRING , fa As HC_KEY Ptr) As HC_BOOLEAN 
 Declare Function HC_Find_Open_Segment Cdecl Alias "HC_Find_Open_Segment"( sa As HC_STRING) As HC_BOOLEAN 
 Declare Function HC_Find_Related_Selection Cdecl Alias "HC_Find_Related_Selection"() As HC_BOOLEAN 
 Declare Function HC_Find_Segment Cdecl Alias "HC_Find_Segment"( sa As HC_STRING) As HC_BOOLEAN 
 Declare Function HC_KShow_Owner_By_Key Cdecl Alias "HC_KShow_Owner_By_Key"(hk as HC_KEY) As HC_KEY 
 Declare Function HC_Parse_String Cdecl Alias "HC_Parse_String"( sa As HC_STRING ,  sa As HC_STRING , ia As HC_INTEGER,  sa As HC_STRING) As HC_BOOLEAN
 Declare Function HC_Show_Environment Cdecl Alias "HC_Show_Environment"( sa As HC_STRING ,  sa As HC_STRING) As HC_BOOLEAN 
 Declare Function HC_Show_Existence Cdecl Alias "HC_Show_Existence"( sa As HC_STRING) As HC_INTEGER 
 Declare Function HC_QShow_Existence Cdecl Alias "HC_QShow_Existence"( sa As HC_STRING ,  sa As HC_STRING) As HC_INTEGER





 #Include "HOOPS3D2.BI"